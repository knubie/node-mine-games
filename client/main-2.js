// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    var Game, Home, Player, Routes, SERVER_URL, app, socket;
    SERVER_URL = "http://localhost:3000";
    socket = io.connect(SERVER_URL);
    socket.on('news', function(data) {
      console.log(data);
      return socket.emit('my other event', {
        my: 'data'
      });
    });
    Backbone.sync = function(method, model, options) {
      return socket.emit(method, model);
    };
    Game = (function(_super) {

      __extends(Game, _super);

      function Game() {
        return Game.__super__.constructor.apply(this, arguments);
      }

      Game.prototype.idAttribute = "_id";

      return Game;

    })(Backbone.Model);
    Player = (function(_super) {

      __extends(Player, _super);

      function Player() {
        return Player.__super__.constructor.apply(this, arguments);
      }

      Player.prototype.idAttribute = "_id";

      Player.prototype.name = 'Player';

      return Player;

    })(Backbone.Model);
    Home = (function(_super) {

      __extends(Home, _super);

      function Home() {
        return Home.__super__.constructor.apply(this, arguments);
      }

      Home.prototype.id = 'home';

      Home.prototype.template = $('#home-template').html();

      Home.prototype.render = function() {
        this.$el.html(Mustache.render(this.template));
        $('#container').append(this.$el);
        return this;
      };

      Home.prototype.events = {
        'click #new-game': 'newGame'
      };

      Home.prototype.newGame = function() {
        app.game = new Game({
          players: []
        });
        app.game.save();
        this.remove;
        return app.routes.navigate("games/" + app.game.id, {
          trigger: true
        });
      };

      return Home;

    })(Backbone.View);
    Routes = (function(_super) {

      __extends(Routes, _super);

      function Routes() {
        return Routes.__super__.constructor.apply(this, arguments);
      }

      Routes.prototype.routes = {
        '': 'home',
        'games/:id': 'match'
      };

      Routes.prototype.home = function() {
        if (app.view != null) {
          app.view.remove();
        }
        app.view = new Home;
        return app.view.render();
      };

      Routes.prototype.match = function(id) {
        if (app.view != null) {
          app.view.remove();
        }
        app.game = new Game({
          idAttribute: id
        });
        app.game.fetch();
        app.view = new Match({
          model: app.game
        });
        return app.view.render();
      };

      return Routes;

    })(Backbone.Router);
    return app = {};
  });

}).call(this);
